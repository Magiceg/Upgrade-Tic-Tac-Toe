<Application x:Class="Tic_Tac_Toe.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Tic_Tac_Toe"
             StartupUri="Views/Windows/GameMainWindow.xaml">
    <Application.Resources>
        
        <SolidColorBrush x:Key="MainBackgroundColor" Color="BurlyWood"/>

        <SolidColorBrush x:Key="TextColor" Color="Beige"/>
        <SolidColorBrush x:Key="MenuButonColorBackground" Color="DarkGoldenrod"/>
        <SolidColorBrush x:Key="ButtonBorderColor" Color="Ivory"/>
        <SolidColorBrush x:Key="ChangingColorHoverCursor" Color="Goldenrod"/>
        <SolidColorBrush x:Key="ButtonOnPlayingFieldBackgroundColor" Color="SaddleBrown"/>
        <SolidColorBrush x:Key="ButtonOnPlayingFieldMouseOverBackgroundColor" Color="Sienna"/>

        <Style x:Key="MenuLabelStyle" TargetType="Label">
            <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="Helvetica"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="30"/>
        </Style>

        <Style x:Key="TextBlockStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
            <Setter Property="Width" Value="145"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="Helvetica"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="30"/>
        </Style>

        

        <Style x:Key="MenuButtonStyle" TargetType="Button">
            <Setter Property="MaxWidth" Value="300"/>
            <Setter Property="MinHeight" Value="70"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Background" Value="{StaticResource MenuButonColorBackground}"/>
            <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderColor}"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontFamily" Value="Helvetica"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="4" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                            <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="0.8"/>
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{StaticResource ChangingColorHoverCursor}"/>
                                <Setter Property="Opacity" Value="1" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ButtonOnThePlayingField" TargetType="Button">
            <Setter Property="FontSize" Value="31"/>
            <Setter Property="FontFamily" Value="Helvetica"/>
            <Setter Property="Width" Value="90"/>
            <Setter Property="Height" Value="90"/>
            <Setter Property="Background" Value="{StaticResource ButtonOnPlayingFieldBackgroundColor}"/>
            <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Command" Value="{Binding DataContext.ButtonClikcCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
            <Setter Property="CommandParameter" Value="{Binding}"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="4" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0.5">
                            <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource ButtonOnPlayingFieldMouseOverBackgroundColor}"/>
                </Trigger>

                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsEnabled" Value="True"/>
                        <Condition Property="DataContext" Value="{Binding DataContext.WinningLine, ElementName=TextPage.xaml}"/>
                    </MultiTrigger.Conditions>
                </MultiTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="StackPanelStyle" TargetType="StackPanel">
            <Setter Property="Orientation" Value="Horizontal"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,20"/>
        </Style>

        <Style x:Key="MenuIconButtonStyle"  TargetType="Button">
            <Setter Property="Width" Value="50"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Margin" Value="0,0,20,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="0.8"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Opacity" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RestartIconButtonStyle"  TargetType="Button">
            <Setter Property="Width" Value="50"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Margin" Value="20,0,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="0.8"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Opacity" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


       





    </Application.Resources>
</Application>
